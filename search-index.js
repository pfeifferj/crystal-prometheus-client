crystal_doc_search_index_callback({"repository_name":"prometheus","body":"# Prometheus Client for Crystal\n\nA [Prometheus](https://prometheus.io) client library for Crystal following the [official guidelines](https://prometheus.io/docs/instrumenting/writing_clientlibs/).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  prometheus:\n    github: pfeifferj/prometheus\n    version: ~> 0.1.0\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"prometheus\"\n\n# Create metrics\ncounter = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\")\ngauge = Prometheus.gauge(\"cpu_usage\", \"CPU usage percentage\")\nhistogram = Prometheus.histogram(\"response_time\", \"Response time in seconds\", [0.1, 0.5, 1.0])\nsummary = Prometheus.summary(\"request_size\", \"Request size in bytes\")\n\n# Add labels\nlabels = Prometheus::LabelSet.new({\n  \"method\" => \"GET\",\n  \"handler\" => \"home\"\n})\nrequests = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\", labels)\n\n# Use metrics\ncounter.inc                 # Increment by 1\ncounter.inc(5)              # Increment by given value\ngauge.set(45.2)             # Set to a value\ngauge.inc(5)                # Increase by 5\ngauge.dec(3)                # Decrease by 3\nhistogram.observe(0.25)     # Observe a value\nsummary.observe(1024)       # Observe a value\n\n# Get metrics in Prometheus text format\nputs Prometheus.collect\n```\n\n## Demo\n\nCheck out the [demo application](examples/demo.cr) that showcases all metric types:\n\n```crystal\ncrystal examples/demo.cr\n```\n\nThe demo simulates HTTP traffic and demonstrates:\n\n- Counters tracking requests with labels\n- Gauges monitoring memory usage\n- Histograms measuring response time distributions\n- Summaries capturing request size statistics\n\n## Metric Types\n\n### Counter\n\nA counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.\n\n```crystal\ncounter = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\")\ncounter.inc      # Increment by 1\ncounter.inc(5)   # Increment by 5\n```\n\n### Gauge\n\nA gauge is a metric that represents a single numerical value that can arbitrarily go up and down.\n\n```crystal\ngauge = Prometheus.gauge(\"cpu_usage\", \"CPU usage percentage\")\ngauge.set(45.2)  # Set to 45.2\ngauge.inc(5)     # Increase by 5\ngauge.dec(3)     # Decrease by 3\n```\n\n### Histogram\n\nA histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets.\n\n```crystal\n# Create with custom buckets\nhistogram = Prometheus.histogram(\n  \"response_time\",\n  \"Response time in seconds\",\n  [0.1, 0.5, 1.0, 2.0, 5.0]\n)\n\n# Observe values\nhistogram.observe(0.25)\n```\n\n### Summary\n\nA summary captures individual observations from an event or sample stream and summarizes them in a traditional way, with count and sum.\n\n```crystal\nsummary = Prometheus.summary(\"request_size\", \"Request size in bytes\")\nsummary.observe(1024)\n```\n\n## Labels\n\nLabels enable Prometheus's dimensional data model. A label set can be attached to any metric:\n\n```crystal\n# Create a label set\nlabels = Prometheus::LabelSet.new({\n  \"method\" => \"GET\",\n  \"path\" => \"/api/users\"\n})\n\n# Create metric with labels\nrequests = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\", labels)\nrequests.inc\n\n# Output will include labels:\n# http_requests_total{method=\"GET\",path=\"/api/users\"} 1\n```\n\n## Registry\n\nThe library maintains a default registry that manages all metrics. You can access it directly if needed:\n\n```crystal\n# Register a metric manually\nPrometheus.register(metric)\n\n# Unregister a metric\nPrometheus.unregister(\"metric_name\")\n\n# Clear all metrics\nPrometheus.clear\n\n# Get all metrics in Prometheus text format\noutput = Prometheus.collect\n```\n\n## Thread Safety\n\nAll metric operations are thread-safe. The library uses mutexes to ensure proper synchronization in concurrent environments.\n\n## Development\n\nRun tests:\n\n```crystal\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/pfeifferj/prometheus/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n","program":{"html_id":"prometheus/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"prometheus","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"prometheus/Prometheus","path":"Prometheus.html","kind":"module","full_name":"Prometheus","name":"Prometheus","abstract":false,"locations":[{"filename":"src/metrics.cr","line_number":4,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L4"},{"filename":"src/prometheus.cr","line_number":33,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L33"},{"filename":"src/registry.cr","line_number":4,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L4"},{"filename":"src/types.cr","line_number":2,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L2"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"doc":"A Crystal client library for Prometheus monitoring system.\n\nThis library provides a complete implementation of Prometheus client library guidelines,\nincluding support for all metric types (Counter, Gauge, Histogram, Summary),\nlabel sets, and thread-safe operations.\n\n## Basic Usage\n\n```\n# Create metrics\ncounter = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\")\ngauge = Prometheus.gauge(\"cpu_usage\", \"CPU usage percentage\")\nhistogram = Prometheus.histogram(\"response_time\", \"Response time in seconds\", [0.1, 0.5, 1.0])\nsummary = Prometheus.summary(\"request_size\", \"Request size in bytes\")\n\n# Add labels\nlabels = Prometheus::LabelSet.new({\"method\" => \"GET\", \"path\" => \"/api\"})\nrequests = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\", labels)\n\n# Use metrics\ncounter.inc\ngauge.set(45.2)\nhistogram.observe(0.25)\nsummary.observe(1024)\n\n# Get metrics in Prometheus text format\nputs Prometheus.collect\n```","summary":"<p>A Crystal client library for Prometheus monitoring system.</p>","class_methods":[{"html_id":"clear-class-method","name":"clear","abstract":false,"location":{"filename":"src/prometheus.cr","line_number":59,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L59"},"def":{"name":"clear","visibility":"Public","body":"Registry.default.clear"},"external_var":false},{"html_id":"collect(io:IO):Nil-class-method","name":"collect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/prometheus.cr","line_number":63,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L63"},"def":{"name":"collect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"Registry.default.collect(io)"},"external_var":false},{"html_id":"collect:String-class-method","name":"collect","abstract":false,"location":{"filename":"src/prometheus.cr","line_number":67,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L67"},"def":{"name":"collect","return_type":"String","visibility":"Public","body":"Registry.default.collect"},"external_var":false},{"html_id":"counter(name:String,help:String,labels=LabelSet.new):Counter-class-method","name":"counter","doc":"Creates and registers a new Gauge metric.\n\nA Gauge is a metric that represents a single numerical value that can arbitrarily go up and down.\n\n```\ngauge = Prometheus.gauge(\"cpu_usage\", \"CPU usage percentage\")\ngauge.set(45.2) # Set to 45.2\ngauge.inc(5)    # Increase by 5\ngauge.dec(3)    # Decrease by 3\n```\n\nParameters:\n* name : The name of the gauge metric\n* help : Help text describing the metric\n* labels : Optional LabelSet for dimensional data","summary":"<p>Creates and registers a new Gauge metric.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, labels = LabelSet.new) : Counter","args_html":"(name : String, help : String, labels = <span class=\"t\">LabelSet</span>.new) : <a href=\"Prometheus/Counter.html\">Counter</a>","location":{"filename":"src/prometheus.cr","line_number":86,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L86"},"def":{"name":"counter","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"return_type":"Counter","visibility":"Public","body":"counter = Counter.new(name, help, labels)\nregister(counter)\ncounter\n"},"external_var":false},{"html_id":"gauge(name:String,help:String,labels=LabelSet.new):Gauge-class-method","name":"gauge","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, labels = LabelSet.new) : Gauge","args_html":"(name : String, help : String, labels = <span class=\"t\">LabelSet</span>.new) : <a href=\"Prometheus/Gauge.html\">Gauge</a>","location":{"filename":"src/prometheus.cr","line_number":92,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L92"},"def":{"name":"gauge","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"return_type":"Gauge","visibility":"Public","body":"gauge = Gauge.new(name, help, labels)\nregister(gauge)\ngauge\n"},"external_var":false},{"html_id":"histogram(name:String,help:String,buckets:Array(Float64),labels=LabelSet.new):Histogram-class-method","name":"histogram","doc":"Creates and registers a new Histogram metric.\n\nA Histogram samples observations (usually things like request durations or response sizes)\nand counts them in configurable buckets.\n\n```\nhistogram = Prometheus.histogram(\n  \"response_time\",\n  \"Response time in seconds\",\n  [0.1, 0.5, 1.0, 2.0, 5.0]\n)\nhistogram.observe(0.25)\n```\n\nParameters:\n* name : The name of the histogram metric\n* help : Help text describing the metric\n* buckets : Array of upper bounds for histogram buckets\n* labels : Optional LabelSet for dimensional data","summary":"<p>Creates and registers a new Histogram metric.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"buckets","external_name":"buckets","restriction":"Array(Float64)"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, buckets : Array(Float64), labels = LabelSet.new) : Histogram","args_html":"(name : String, help : String, buckets : Array(Float64), labels = <span class=\"t\">LabelSet</span>.new) : <a href=\"Prometheus/Histogram.html\">Histogram</a>","location":{"filename":"src/prometheus.cr","line_number":117,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L117"},"def":{"name":"histogram","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"buckets","external_name":"buckets","restriction":"Array(Float64)"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"return_type":"Histogram","visibility":"Public","body":"histogram = Histogram.new(name, help, buckets, labels)\nregister(histogram)\nhistogram\n"},"external_var":false},{"html_id":"register(metric:Metric)-class-method","name":"register","doc":"Creates and registers a new Counter metric.\n\nA Counter is a cumulative metric that represents a single monotonically increasing counter\nwhose value can only increase or be reset to zero.\n\n```\ncounter = Prometheus.counter(\"http_requests_total\", \"Total HTTP requests\")\ncounter.inc    # Increment by 1\ncounter.inc(5) # Increment by 5\n```\n\nParameters:\n* name : The name of the counter metric\n* help : Help text describing the metric\n* labels : Optional LabelSet for dimensional data","summary":"<p>Creates and registers a new Counter metric.</p>","abstract":false,"args":[{"name":"metric","external_name":"metric","restriction":"Metric"}],"args_string":"(metric : Metric)","args_html":"(metric : <a href=\"Prometheus/Metric.html\">Metric</a>)","location":{"filename":"src/prometheus.cr","line_number":51,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L51"},"def":{"name":"register","args":[{"name":"metric","external_name":"metric","restriction":"Metric"}],"visibility":"Public","body":"Registry.default.register(metric)"},"external_var":false},{"html_id":"summary(name:String,help:String,labels=LabelSet.new):Summary-class-method","name":"summary","doc":"Creates and registers a new Summary metric.\n\nA Summary captures individual observations from an event or sample stream\nand summarizes them in a traditional way, with count and sum.\n\n```\nsummary = Prometheus.summary(\"request_size\", \"Request size in bytes\")\nsummary.observe(1024)\n```\n\nParameters:\n* name : The name of the summary metric\n* help : Help text describing the metric\n* labels : Optional LabelSet for dimensional data","summary":"<p>Creates and registers a new Summary metric.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, labels = LabelSet.new) : Summary","args_html":"(name : String, help : String, labels = <span class=\"t\">LabelSet</span>.new) : <a href=\"Prometheus/Summary.html\">Summary</a>","location":{"filename":"src/prometheus.cr","line_number":137,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L137"},"def":{"name":"summary","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":""}],"return_type":"Summary","visibility":"Public","body":"summary = Summary.new(name, help, labels)\nregister(summary)\nsummary\n"},"external_var":false},{"html_id":"unregister(name:String)-class-method","name":"unregister","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/prometheus.cr","line_number":55,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/prometheus.cr#L55"},"def":{"name":"unregister","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"Registry.default.unregister(name)"},"external_var":false}],"types":[{"html_id":"prometheus/Prometheus/Counter","path":"Prometheus/Counter.html","kind":"class","full_name":"Prometheus::Counter","name":"Counter","abstract":false,"superclass":{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},"ancestors":[{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metrics.cr","line_number":21,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L21"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"A Counter is a cumulative metric that represents a single monotonically increasing counter\nwhose value can only increase or be reset to zero.\n\nUse a Counter for metrics that accumulate values, such as:\n* Number of requests served\n* Number of tasks completed\n* Number of errors\n\nExample:\n```\ncounter = Counter.new(\"http_requests_total\", \"Total HTTP requests\")\ncounter.inc    # Increment by 1\ncounter.inc(5) # Increment by 5\n```\n\nNOTE: Counter values cannot decrease. Use a Gauge for values that can go up and down.","summary":"<p>A Counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.</p>","instance_methods":[{"html_id":"inc(value:Number=1,labels:Labels|Nil=nil)-instance-method","name":"inc","abstract":false,"args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number = 1, labels : Labels | Nil = nil)","args_html":"(value : Number = <span class=\"n\">1</span>, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":26,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L26"},"def":{"name":"inc","args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"if value < 0\n  raise(ArgumentError.new(\"Counter increment must be positive\"))\nend\nstore.inc(value.to_f64, label_set_for(labels))\n"},"external_var":false},{"html_id":"inc!(value:Number=1,labels:Labels|Nil=nil)-instance-method","name":"inc!","abstract":false,"args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number = 1, labels : Labels | Nil = nil)","args_html":"(value : Number = <span class=\"n\">1</span>, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":31,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L31"},"def":{"name":"inc!","args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"if value < 0\n  raise(ArgumentError.new(\"Counter increment must be positive\"))\nend\nstore.inc!(value.to_f64, label_set_for(labels))\n"},"external_var":false},{"html_id":"type:String-instance-method","name":"type","abstract":false,"location":{"filename":"src/metrics.cr","line_number":22,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L22"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"\"counter\""},"external_var":false},{"html_id":"value(labels:Labels|Nil=nil):Float64-instance-method","name":"value","abstract":false,"args":[{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(labels : Labels | Nil = nil) : Float64","args_html":"(labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>) : Float64","location":{"filename":"src/metrics.cr","line_number":36,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L36"},"def":{"name":"value","args":[{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"return_type":"Float64","visibility":"Public","body":"store.get(label_set_for(labels))"},"external_var":false}]},{"html_id":"prometheus/Prometheus/DataStore","path":"Prometheus/DataStore.html","kind":"class","full_name":"Prometheus::DataStore","name":"DataStore","abstract":false,"superclass":{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"prometheus/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":211,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L211"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"prometheus/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/types.cr","line_number":216,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L216"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"dec(value:Float64,labels:LabelSet):Nil-instance-method","name":"dec","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"args_string":"(value : Float64, labels : LabelSet) : Nil","args_html":"(value : Float64, labels : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>) : Nil","location":{"filename":"src/types.cr","line_number":234,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L234"},"def":{"name":"dec","args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"return_type":"Nil","visibility":"Public","body":"inc(-1, labels)"},"external_var":false},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/types.cr","line_number":246,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L246"},"def":{"name":"each","yields":1,"block_arity":1,"visibility":"Public","body":"sync do\n  each! do |label_set, value|\n    yield({label_set, value})\n  end\nend"},"external_var":false},{"html_id":"get(labels:LabelSet):Float64-instance-method","name":"get","abstract":false,"args":[{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"args_string":"(labels : LabelSet) : Float64","args_html":"(labels : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>) : Float64","location":{"filename":"src/types.cr","line_number":238,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L238"},"def":{"name":"get","args":[{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"return_type":"Float64","visibility":"Public","body":"sync do get!(labels) end"},"external_var":false},{"html_id":"inc(value:Float64,labels:LabelSet):Nil-instance-method","name":"inc","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"args_string":"(value : Float64, labels : LabelSet) : Nil","args_html":"(value : Float64, labels : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>) : Nil","location":{"filename":"src/types.cr","line_number":226,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L226"},"def":{"name":"inc","args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"return_type":"Nil","visibility":"Public","body":"sync do inc!(value, labels) end"},"external_var":false},{"html_id":"set(value:Float64,labels:LabelSet):Nil-instance-method","name":"set","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"args_string":"(value : Float64, labels : LabelSet) : Nil","args_html":"(value : Float64, labels : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>) : Nil","location":{"filename":"src/types.cr","line_number":222,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L222"},"def":{"name":"set","args":[{"name":"value","external_name":"value","restriction":"Float64"},{"name":"labels","external_name":"labels","restriction":"LabelSet"}],"return_type":"Nil","visibility":"Public","body":"sync do @data[labels] = value end"},"external_var":false}]},{"html_id":"prometheus/Prometheus/Gauge","path":"Prometheus/Gauge.html","kind":"class","full_name":"Prometheus::Gauge","name":"Gauge","abstract":false,"superclass":{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},"ancestors":[{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metrics.cr","line_number":59,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L59"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"A Gauge is a metric that represents a single numerical value that can arbitrarily go up and down.\n\nUse a Gauge for metrics that can increase and decrease, such as:\n* Current memory usage\n* Number of items in a queue\n* Number of active connections\n\nExample:\n```\ngauge = Gauge.new(\"cpu_usage\", \"CPU usage percentage\")\ngauge.set(45.2) # Set to specific value\ngauge.inc(5)    # Increase by 5\ngauge.dec(3)    # Decrease by 3\n```","summary":"<p>A Gauge is a metric that represents a single numerical value that can arbitrarily go up and down.</p>","instance_methods":[{"html_id":"dec(value:Number=1,labels:Labels|Nil=nil)-instance-method","name":"dec","abstract":false,"args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number = 1, labels : Labels | Nil = nil)","args_html":"(value : Number = <span class=\"n\">1</span>, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":72,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L72"},"def":{"name":"dec","args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"store.dec(value, label_set_for(labels))"},"external_var":false},{"html_id":"inc(value:Number=1,labels:Labels|Nil=nil)-instance-method","name":"inc","abstract":false,"args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number = 1, labels : Labels | Nil = nil)","args_html":"(value : Number = <span class=\"n\">1</span>, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":68,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L68"},"def":{"name":"inc","args":[{"name":"value","default_value":"1","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"store.inc(value, label_set_for(labels))"},"external_var":false},{"html_id":"set(value:Number,labels:Labels|Nil=nil)-instance-method","name":"set","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number, labels : Labels | Nil = nil)","args_html":"(value : Number, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":64,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L64"},"def":{"name":"set","args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"store.set(value, label_set_for(labels))"},"external_var":false},{"html_id":"type:String-instance-method","name":"type","abstract":false,"location":{"filename":"src/metrics.cr","line_number":60,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L60"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"\"gauge\""},"external_var":false},{"html_id":"value(labels:Labels|Nil=nil):Float64-instance-method","name":"value","abstract":false,"args":[{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(labels : Labels | Nil = nil) : Float64","args_html":"(labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>) : Float64","location":{"filename":"src/metrics.cr","line_number":76,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L76"},"def":{"name":"value","args":[{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"return_type":"Float64","visibility":"Public","body":"store.get(label_set_for(labels))"},"external_var":false}]},{"html_id":"prometheus/Prometheus/Histogram","path":"Prometheus/Histogram.html","kind":"class","full_name":"Prometheus::Histogram","name":"Histogram","abstract":false,"superclass":{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},"ancestors":[{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metrics.cr","line_number":106,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L106"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"A Histogram samples observations (usually things like request durations or response sizes)\nand counts them in configurable buckets.\n\nUse a Histogram to track size distributions, such as:\n* Request duration\n* Response sizes\n* Queue length variations\n\nExample:\n```\n# Create with custom buckets\nhistogram = Histogram.new(\n  \"response_time\",\n  \"Response time in seconds\",\n  [0.1, 0.5, 1.0, 2.0, 5.0]\n)\n\n# Observe values\nhistogram.observe(0.25)\n```\n\nHistograms track:\n* Count per bucket (number of values <= bucket upper bound)\n* Total sum of all observed values\n* Count of all observed values","summary":"<p>A Histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets.</p>","constructors":[{"html_id":"new(name:String,help:String,buckets:Array(Float64),labels=Labels.new)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"buckets","external_name":"buckets","restriction":"Array(Float64)"},{"name":"labels","default_value":"Labels.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, buckets : Array(Float64), labels = Labels.new)","args_html":"(name : String, help : String, buckets : Array(Float64), labels = <span class=\"t\">Labels</span>.new)","location":{"filename":"src/metrics.cr","line_number":112,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L112"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"buckets","external_name":"buckets","restriction":"Array(Float64)"},{"name":"labels","default_value":"Labels.new","external_name":"labels","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, help, buckets, labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"collect(io:IO):Nil-instance-method","name":"collect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/metrics.cr","line_number":150,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L150"},"def":{"name":"collect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"@mutex.synchronize do\n  @count.collect(io)\n  @sum.collect(io)\n  @buckets.each do |upper_bound, bucket|\n    @label_sets.each do |labels|\n      bucket.get!(labels)\n    end\n    bucket.collect(io)\n  end\nend"},"external_var":false},{"html_id":"collect:Array(Sample)-instance-method","name":"collect","abstract":false,"location":{"filename":"src/metrics.cr","line_number":163,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L163"},"def":{"name":"collect","return_type":"Array(Sample)","visibility":"Public","body":"@mutex.synchronize do\n  samples = ((Array(Sample).new(@buckets.size + 2))\n    .concat(@count.collect))\n    .concat(@sum.collect)\n\n  @buckets.each do |upper_bound, bucket|\n    @label_sets.each do |labels|\n      bucket.get!(labels)\n    end\n    samples.concat(bucket.collect)\n  end\n\n  samples\nend"},"external_var":false},{"html_id":"observe(value:Number,labels:Labels|Nil=nil)-instance-method","name":"observe","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number, labels : Labels | Nil = nil)","args_html":"(value : Number, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":137,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L137"},"def":{"name":"observe","args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"@mutex.synchronize do\n  @label_sets << labels\n  @count.inc!(1, labels)\n  @sum.inc!(value, labels)\n  @buckets.each do |upper_bound, bucket|\n    if value <= upper_bound\n      bucket.inc!(1, labels)\n    end\n  end\nend"},"external_var":false},{"html_id":"type:String-instance-method","name":"type","abstract":false,"location":{"filename":"src/metrics.cr","line_number":133,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L133"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"\"histogram\""},"external_var":false}]},{"html_id":"prometheus/Prometheus/Label","path":"Prometheus/Label.html","kind":"class","full_name":"Prometheus::Label","name":"Label","abstract":false,"superclass":{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":14,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L14"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"A Label represents a key-value pair used to identify a metric.\n\nLabels are used to distinguish different dimensions of a metric. For example,\nan HTTP request counter might have labels for the method and path.\n\n```\nlabel = Label.new(\"method\", \"GET\")\n```\n\nLabel names must match the regex `[a-zA-Z_][a-zA-Z0-9_]*` and cannot be empty.\nLabel values cannot be empty.","summary":"<p>A Label represents a key-value pair used to identify a metric.</p>","constructors":[{"html_id":"new(name:String,value:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(name : String, value : String)","args_html":"(name : String, value : String)","location":{"filename":"src/types.cr","line_number":18,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L18"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/types.cr","line_number":15,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L15"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"value:String-instance-method","name":"value","abstract":false,"location":{"filename":"src/types.cr","line_number":16,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L16"},"def":{"name":"value","return_type":"String","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"prometheus/Prometheus/LabelSet","path":"Prometheus/LabelSet.html","kind":"struct","full_name":"Prometheus::LabelSet","name":"LabelSet","abstract":false,"superclass":{"html_id":"prometheus/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"prometheus/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"prometheus/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"prometheus/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":52,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L52"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"prometheus/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"LabelSet represents a collection of labels that uniquely identify a metric.\n\nA LabelSet is used to attach multiple labels to a metric, enabling Prometheus's\ndimensional data model.\n\n```\nlabels = LabelSet.new({\n  \"method\" => \"GET\",\n  \"path\"   => \"/api/users\",\n})\n```\n\nLabelSets can be merged to combine labels from different sources:\n\n```\nbase_labels = LabelSet.new({\"service\" => \"web\"})\nrequest_labels = LabelSet.new({\"method\" => \"GET\"})\ncombined = base_labels.merge(request_labels)\n```","summary":"<p>LabelSet represents a collection of labels that uniquely identify a metric.</p>","constructors":[{"html_id":"new(labels:Hash(String,String)=Hash(String,String).new)-class-method","name":"new","abstract":false,"args":[{"name":"labels","default_value":"Hash(String, String).new","external_name":"labels","restriction":"::Hash(::String, ::String)"}],"args_string":"(labels : Hash(String, String) = Hash(String, String).new)","args_html":"(labels : Hash(String, String) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).new)","location":{"filename":"src/types.cr","line_number":57,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L57"},"def":{"name":"new","args":[{"name":"labels","default_value":"Hash(String, String).new","external_name":"labels","restriction":"::Hash(::String, ::String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other:self)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if labels == other.labels\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"[]?(label:String)-instance-method","name":"[]?","abstract":false,"args":[{"name":"label","external_name":"label","restriction":"String"}],"args_string":"(label : String)","args_html":"(label : String)","location":{"filename":"src/types.cr","line_number":72,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L72"},"def":{"name":"[]?","args":[{"name":"label","external_name":"label","restriction":"String"}],"visibility":"Public","body":"@labels[label]?"},"external_var":false},{"html_id":"add(name:String,value:String)-instance-method","name":"add","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(name : String, value : String)","args_html":"(name : String, value : String)","location":{"filename":"src/types.cr","line_number":60,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L60"},"def":{"name":"add","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@labels[name] = value"},"external_var":false},{"html_id":"each(*args,**options)-instance-method","name":"each","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/types.cr","line_number":76,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L76"},"def":{"name":"each","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"labels.each(*args, **options)"},"external_var":false},{"html_id":"each(*args,**options,&)-instance-method","name":"each","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/types.cr","line_number":76,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L76"},"def":{"name":"each","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"labels.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = labels.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"labels:Hash(String,String)-instance-method","name":"labels","abstract":false,"location":{"filename":"src/types.cr","line_number":55,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L55"},"def":{"name":"labels","return_type":"Hash(String, String)","visibility":"Public","body":"@labels"},"external_var":false},{"html_id":"merge(other:LabelSet)-instance-method","name":"merge","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"LabelSet"}],"args_string":"(other : LabelSet)","args_html":"(other : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>)","location":{"filename":"src/types.cr","line_number":64,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L64"},"def":{"name":"merge","args":[{"name":"other","external_name":"other","restriction":"LabelSet"}],"visibility":"Public","body":"merge(other.labels)"},"external_var":false},{"html_id":"merge(other:Hash(String,String))-instance-method","name":"merge","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Hash(String, String)"}],"args_string":"(other : Hash(String, String))","args_html":"(other : Hash(String, String))","location":{"filename":"src/types.cr","line_number":68,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L68"},"def":{"name":"merge","args":[{"name":"other","external_name":"other","restriction":"Hash(String, String)"}],"visibility":"Public","body":"LabelSet.new(labels.merge(other))"},"external_var":false},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/types.cr","line_number":79,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L79"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"if @labels.empty?\n  return\nend\n\nfirst = true\nio << \"{\"\n@labels.each do |name, value|\n  if first\n  else\n    io << \",\"\n  end\n  first = false\n  io << \"#{name}=\\\"#{value}\\\"\"\nend\nio << \"}\"\n"},"external_var":false}]},{"html_id":"prometheus/Prometheus/Metric","path":"Prometheus/Metric.html","kind":"class","full_name":"Prometheus::Metric","name":"Metric","abstract":true,"superclass":{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":101,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L101"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"prometheus/Prometheus/Counter","kind":"class","full_name":"Prometheus::Counter","name":"Counter"},{"html_id":"prometheus/Prometheus/Gauge","kind":"class","full_name":"Prometheus::Gauge","name":"Gauge"},{"html_id":"prometheus/Prometheus/Histogram","kind":"class","full_name":"Prometheus::Histogram","name":"Histogram"},{"html_id":"prometheus/Prometheus/Summary","kind":"class","full_name":"Prometheus::Summary","name":"Summary"}],"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"Base class for all metric types (Counter, Gauge, Histogram, Summary).\n\nThis abstract class defines the common interface and behavior for all metrics:\n* Each metric has a name, help text, and optional labels\n* Names must match the regex `[a-zA-Z_:][a-zA-Z0-9_:]*`\n* Each metric type must implement `type` and `collect` methods\n\nMetric implementations should be thread-safe and handle concurrent access appropriately.","summary":"<p>Base class for all metric types (Counter, Gauge, Histogram, Summary).</p>","constructors":[{"html_id":"new(name:String,help:String,labels:Hash(String,String)=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String)"}],"args_string":"(name : String, help : String, labels : Hash(String, String) = nil)","args_html":"(name : String, help : String, labels : Hash(String, String) = <span class=\"n\">nil</span>)","location":{"filename":"src/types.cr","line_number":109,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L109"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, help, labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name:String,help:String,labels:Prometheus::LabelSet=LabelSet.new)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":"::Prometheus::LabelSet"}],"args_string":"(name : String, help : String, labels : Prometheus::LabelSet = LabelSet.new)","args_html":"(name : String, help : String, labels : <a href=\"../Prometheus/LabelSet.html\">Prometheus::LabelSet</a> = <span class=\"t\">LabelSet</span>.new)","location":{"filename":"src/types.cr","line_number":113,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L113"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"LabelSet.new","external_name":"labels","restriction":"::Prometheus::LabelSet"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, help, labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"collect(io:IO):Nil-instance-method","name":"collect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/types.cr","line_number":140,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L140"},"def":{"name":"collect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"store.each do |label_set, value|\n  (Sample.new(name, label_set, value)).collect(io)\nend"},"external_var":false},{"html_id":"collect:Array(Sample)-instance-method","name":"collect","abstract":false,"location":{"filename":"src/types.cr","line_number":146,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L146"},"def":{"name":"collect","return_type":"Array(Sample)","visibility":"Public","body":"store.map do |label_set, value|\n  Sample.new(@name, label_set, value)\nend"},"external_var":false},{"html_id":"help:String-instance-method","name":"help","abstract":false,"location":{"filename":"src/types.cr","line_number":105,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L105"},"def":{"name":"help","return_type":"String","visibility":"Public","body":"@help"},"external_var":false},{"html_id":"labels:LabelSet-instance-method","name":"labels","abstract":false,"location":{"filename":"src/types.cr","line_number":106,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L106"},"def":{"name":"labels","return_type":"LabelSet","visibility":"Public","body":"@labels"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/types.cr","line_number":104,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L104"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"type:String-instance-method","name":"type","abstract":true,"location":{"filename":"src/types.cr","line_number":138,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L138"},"def":{"name":"type","return_type":"String","visibility":"Public","body":""},"external_var":false}],"types":[{"html_id":"prometheus/Prometheus/Metric/Labels","path":"Prometheus/Metric/Labels.html","kind":"alias","full_name":"Prometheus::Metric::Labels","name":"Labels","abstract":false,"locations":[{"filename":"src/types.cr","line_number":102,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L102"}],"repository_name":"prometheus","program":false,"enum":false,"alias":true,"aliased":"(Hash(String, String) | Prometheus::LabelSet)","aliased_html":"Hash(String, String) | <a href=\"../../Prometheus/LabelSet.html\">Prometheus::LabelSet</a>","const":false,"namespace":{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"}}]},{"html_id":"prometheus/Prometheus/Registry","path":"Prometheus/Registry.html","kind":"class","full_name":"Prometheus::Registry","name":"Registry","abstract":false,"superclass":{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/registry.cr","line_number":28,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L28"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"Registry stores and manages the collection of metrics.\n\nThe Registry is responsible for:\n* Storing metric instances\n* Ensuring metric names are unique\n* Collecting metrics in Prometheus text format\n\nA default registry is provided via `Prometheus.register`, but you can also create\nyour own registries if needed:\n\n```\n# Using default registry\nPrometheus.register(metric)\noutput = Prometheus.collect\n\n# Using custom registry\nregistry = Registry.new\nregistry.register(metric)\noutput = registry.collect\n```\n\nThe registry ensures thread-safe access to metrics and provides proper\nsynchronization for concurrent operations.","summary":"<p>Registry stores and manages the collection of metrics.</p>","constructors":[{"html_id":"default:Registry-class-method","name":"default","doc":"Default global registry instance","summary":"<p>Default global registry instance</p>","abstract":false,"location":{"filename":"src/registry.cr","line_number":108,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L108"},"def":{"name":"default","return_type":"Registry","visibility":"Public","body":"@@default"},"external_var":false}],"instance_methods":[{"html_id":"clear-instance-method","name":"clear","doc":"Removes all metrics from the registry.\n\n```\nregistry.clear\n```","summary":"<p>Removes all metrics from the registry.</p>","abstract":false,"location":{"filename":"src/registry.cr","line_number":69,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L69"},"def":{"name":"clear","visibility":"Public","body":"@mutex.synchronize do\n  @metrics.clear\nend"},"external_var":false},{"html_id":"collect(io:IO):Nil-instance-method","name":"collect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/registry.cr","line_number":94,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L94"},"def":{"name":"collect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"@mutex.synchronize do\n  @metrics.each_value do |metric|\n\n    ((((io << \"# HELP \") << metric.name) << \" \") << metric.help) << \"\\n\"\n\n    ((((io << \"# TYPE \") << metric.name) << \" \") << metric.type) << \"\\n\"\n\n    metric.collect(io)\n  end\nend"},"external_var":false},{"html_id":"collect:String-instance-method","name":"collect","doc":"Collects all registered metrics and returns them in Prometheus text format.\n\nThe output format follows the Prometheus exposition format:\n```text\n# HELP http_requests_total Total HTTP requests\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"GET\"} 42\n```\n\n```\noutput = registry.collect\nputs output\n```","summary":"<p>Collects all registered metrics and returns them in Prometheus text format.</p>","abstract":false,"location":{"filename":"src/registry.cr","line_number":88,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L88"},"def":{"name":"collect","return_type":"String","visibility":"Public","body":"String.build do |io|\n  collect(io)\nend"},"external_var":false},{"html_id":"register(metric:Metric)-instance-method","name":"register","doc":"Registers a metric with this registry.\n\nEach metric name must be unique within a registry. Attempting to register\na metric with a name that's already in use will raise an ArgumentError.\n\n```\ncounter = Counter.new(\"http_requests_total\", \"Total HTTP requests\")\nregistry.register(counter)\n```\n\nRaises:\n* ArgumentError if a metric with the same name is already registered","summary":"<p>Registers a metric with this registry.</p>","abstract":false,"args":[{"name":"metric","external_name":"metric","restriction":"Metric"}],"args_string":"(metric : Metric)","args_html":"(metric : <a href=\"../Prometheus/Metric.html\">Metric</a>)","location":{"filename":"src/registry.cr","line_number":44,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L44"},"def":{"name":"register","args":[{"name":"metric","external_name":"metric","restriction":"Metric"}],"visibility":"Public","body":"@mutex.synchronize do\n  if @metrics[metric.name]?\n    raise(ArgumentError.new(\"Metric #{metric.name} already registered\"))\n  end\n  @metrics[metric.name] = metric\nend"},"external_var":false},{"html_id":"unregister(name:String)-instance-method","name":"unregister","doc":"Unregisters a metric by name.\n\n```\nregistry.unregister(\"http_requests_total\")\n```","summary":"<p>Unregisters a metric by name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/registry.cr","line_number":58,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/registry.cr#L58"},"def":{"name":"unregister","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@mutex.synchronize do\n  @metrics.delete(name)\nend"},"external_var":false}]},{"html_id":"prometheus/Prometheus/Sample","path":"Prometheus/Sample.html","kind":"struct","full_name":"Prometheus::Sample","name":"Sample","abstract":false,"superclass":{"html_id":"prometheus/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"prometheus/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"prometheus/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":179,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L179"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"Represents a single sample value at a point in time.\n\nA Sample combines:\n* A metric name\n* A set of labels\n* A numeric value\n* An optional timestamp\n\nSamples are used to represent the actual data points collected by metrics.\nThe Sample format follows the Prometheus exposition format:\n\n```text\nmetric_name{label=\"value\"} 42\n# Or with timestamp:\nmetric_name{label=\"value\"} 42 1234567890\n```","summary":"<p>Represents a single sample value at a point in time.</p>","constructors":[{"html_id":"new(name:String,labels:Hash(String,String),value:Float64,timestamp:Int64|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"labels","external_name":"labels","restriction":"Hash(String, String)"},{"name":"value","external_name":"value","restriction":"Float64"},{"name":"timestamp","default_value":"nil","external_name":"timestamp","restriction":"Int64 | ::Nil"}],"args_string":"(name : String, labels : Hash(String, String), value : Float64, timestamp : Int64 | Nil = nil)","args_html":"(name : String, labels : Hash(String, String), value : Float64, timestamp : Int64 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/types.cr","line_number":185,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L185"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"labels","external_name":"labels","restriction":"Hash(String, String)"},{"name":"value","external_name":"value","restriction":"Float64"},{"name":"timestamp","default_value":"nil","external_name":"timestamp","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"new(name, LabelSet.new(labels), value, timestamp)"},"external_var":false},{"html_id":"new(name:String,labels:LabelSet,value:Float64,timestamp:Int64|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"labels","external_name":"labels","restriction":"LabelSet"},{"name":"value","external_name":"value","restriction":"Float64"},{"name":"timestamp","default_value":"nil","external_name":"timestamp","restriction":"Int64 | ::Nil"}],"args_string":"(name : String, labels : LabelSet, value : Float64, timestamp : Int64 | Nil = nil)","args_html":"(name : String, labels : <a href=\"../Prometheus/LabelSet.html\">LabelSet</a>, value : Float64, timestamp : Int64 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/types.cr","line_number":189,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L189"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"labels","external_name":"labels","restriction":"LabelSet"},{"name":"value","external_name":"value","restriction":"Float64"},{"name":"timestamp","default_value":"nil","external_name":"timestamp","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, labels, value, timestamp)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other:self)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if name == other.name\nelse\n  return false\nend\n\nif labels == other.labels\nelse\n  return false\nend\n\nif value == other.value\nelse\n  return false\nend\n\nif timestamp == other.timestamp\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"collect(io:IO):Nil-instance-method","name":"collect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/types.cr","line_number":192,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L192"},"def":{"name":"collect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"to_s(io)\nio.puts\n"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = name.hash(hasher)\n\nhasher = labels.hash(hasher)\n\nhasher = value.hash(hasher)\n\nhasher = timestamp.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"labels:LabelSet-instance-method","name":"labels","abstract":false,"location":{"filename":"src/types.cr","line_number":181,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L181"},"def":{"name":"labels","return_type":"LabelSet","visibility":"Public","body":"@labels"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/types.cr","line_number":180,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L180"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"timestamp:Int64|Nil-instance-method","name":"timestamp","abstract":false,"location":{"filename":"src/types.cr","line_number":183,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L183"},"def":{"name":"timestamp","return_type":"Int64 | ::Nil","visibility":"Public","body":"@timestamp"},"external_var":false},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/types.cr","line_number":197,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L197"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << @name\nio << @labels\nio << \" \"\nio << @value\nif timestamp = @timestamp\n  io << \" \"\n  io << timestamp\nend\n"},"external_var":false},{"html_id":"value:Float64-instance-method","name":"value","abstract":false,"location":{"filename":"src/types.cr","line_number":182,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/types.cr#L182"},"def":{"name":"value","return_type":"Float64","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"prometheus/Prometheus/Summary","path":"Prometheus/Summary.html","kind":"class","full_name":"Prometheus::Summary","name":"Summary","abstract":false,"superclass":{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},"ancestors":[{"html_id":"prometheus/Prometheus/Metric","kind":"class","full_name":"Prometheus::Metric","name":"Metric"},{"html_id":"prometheus/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"prometheus/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metrics.cr","line_number":198,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L198"}],"repository_name":"prometheus","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"prometheus/Prometheus","kind":"module","full_name":"Prometheus","name":"Prometheus"},"doc":"A Summary captures individual observations from an event or sample stream\nand summarizes them with count and sum.\n\nUse a Summary for metrics where you need the count and sum, such as:\n* Request latencies\n* Request sizes\n* Response sizes\n\nExample:\n```\nsummary = Summary.new(\"request_size\", \"Request size in bytes\")\nsummary.observe(1024)\n```\n\nSummaries track:\n* Count of all observed values\n* Sum of all observed values","summary":"<p>A Summary captures individual observations from an event or sample stream and summarizes them with count and sum.</p>","constructors":[{"html_id":"new(name:String,help:String,labels=Labels.new)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"Labels.new","external_name":"labels","restriction":""}],"args_string":"(name : String, help : String, labels = Labels.new)","args_html":"(name : String, help : String, labels = <span class=\"t\">Labels</span>.new)","location":{"filename":"src/metrics.cr","line_number":203,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L203"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"help","external_name":"help","restriction":"String"},{"name":"labels","default_value":"Labels.new","external_name":"labels","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, help, labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"collect:Array(Sample)-instance-method","name":"collect","abstract":false,"location":{"filename":"src/metrics.cr","line_number":220,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L220"},"def":{"name":"collect","return_type":"Array(Sample)","visibility":"Public","body":"@mutex.synchronize do\n  ((Array(Sample).new(labels.size * 2))\n    .concat(@count.collect))\n    .concat(@sum.collect)\nend"},"external_var":false},{"html_id":"observe(value:Number,labels:Labels|Nil=nil)-instance-method","name":"observe","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"args_string":"(value : Number, labels : Labels | Nil = nil)","args_html":"(value : Number, labels : <a href=\"../Prometheus/Metric/Labels.html\">Labels</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/metrics.cr","line_number":213,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L213"},"def":{"name":"observe","args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Labels | ::Nil"}],"visibility":"Public","body":"@mutex.synchronize do\n  @count.inc!(1, labels)\n  @sum.inc!(value, labels)\nend"},"external_var":false},{"html_id":"type:String-instance-method","name":"type","abstract":false,"location":{"filename":"src/metrics.cr","line_number":209,"url":"https://github.com/pfeifferj/crystal-prometheus-client/blob/a691d405b6d0819e8c3c473a27cbd27ddb9a0c2b/src/metrics.cr#L209"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"\"summary\""},"external_var":false}]}]}]}})